services:
  postgres:
    image: postgres:15-alpine
    container_name: cloudbox-postgres
    environment:
      POSTGRES_DB: cloudbox
      POSTGRES_USER: cloudbox
      POSTGRES_PASSWORD: cloudbox_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cloudbox"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: golang:1.21-alpine
    container_name: cloudbox-backend
    working_dir: /app
    environment:
      - DATABASE_URL=postgres://cloudbox:cloudbox_dev_password@postgres:5432/cloudbox?sslmode=disable
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=8080
      - ENVIRONMENT=development
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: ["sh", "-c", "go mod tidy && go run main.go"]

  frontend:
    image: node:20-alpine
    container_name: cloudbox-frontend
    working_dir: /app
    environment:
      - PUBLIC_API_URL=http://localhost:8080
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["sh", "-c", "npm install && npm run dev -- --host 0.0.0.0 --port 3000"]

  redis:
    image: redis:7-alpine
    container_name: cloudbox-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: